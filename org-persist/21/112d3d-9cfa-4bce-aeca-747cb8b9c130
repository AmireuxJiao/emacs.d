(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #4=(headline #1=(:raw-value "Linux" :begin 1 :end 230 :pre-blank 1 :contents-begin 10 :contents-end 227 :robust-begin 12 :robust-end 225 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1 :title (#("Linux" 0 5 (:parent (headline #1#)))) :parent #7=(org-data (:begin 1 :contents-begin 1 :contents-end 227 :end 230 :robust-begin 3 :robust-end 225 :post-blank 1 :post-affiliated 1 :path "d:/1_tools.file.works/9_CMD.Coding/docments/Linux.org" :mode org-data :CATEGORY "Linux" :parent nil :cached t :org-element--cache-sync-key nil)) :cached t :org-element--cache-sync-key nil)) 0] [nil [nil nil #8=(headline #2=(:raw-value "如何安装ARM-GCC" :begin 211 :end 230 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 211 :title (#("如何安装ARM-GCC" 0 11 (:parent (headline #2#)))) :parent #6=(headline #3=(:raw-value "交叉编译" :begin 10 :end 230 :pre-blank 1 :contents-begin 19 :contents-end 227 :robust-begin 21 :robust-end 225 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10 :title (#("交叉编译" 0 4 (:parent (headline #3#)))) :parent #4# :cached t :org-element--cache-sync-key nil)) :cached t :org-element--cache-sync-key nil)) 0] #9=(headline (:raw-value #5="ARM-GCC是什么和GCC有什么关系？" :begin 19 :end 102 :pre-blank 0 :contents-begin 44 :contents-end 101 :robust-begin 46 :robust-end 99 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 19 :title #5# :mode section :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 1] #6# 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[nil nil #7# 0] [[nil nil #6# 0] [nil nil #8# 0] #9# 0] #4# 1] nil nil 0] org-element--cache-compare)))